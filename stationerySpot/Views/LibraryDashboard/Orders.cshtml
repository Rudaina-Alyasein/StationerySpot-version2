@model List<stationerySpot.ViewModels.OrderViewModel>

@{
    Layout = "LibraryDashboard";
}


<!-- Begin Page Content -->
<div class="container-fluid">
    <h3 class="mb-4">Order Management - Library</h3>

    <!-- Filter by Status & Sort by Date -->
    <div class="mb-3 row">
        <div class="col-md-4">
            <form method="get" action="/LibraryDashboard/Orders" id="statusForm">
                <select name="status" id="statusSelect">
                    <option value="">All</option>
                    <option value="Pending">Pending</option>
                    <option value="Processing">Processing</option>
                    <option value="Completed">Delivered</option>
                    <option value="Canceled">Cancelled</option>
                </select>
            </form>

            <script>
                // اضبط القيمة المحددة من السيرفر هنا:
                const selectedStatus = "@(ViewBag.SelectedStatus ?? "")";

                document.getElementById("statusSelect").value = selectedStatus;

                // ارسال تلقائي عند التغيير
                document.getElementById("statusSelect").addEventListener("change", function () {
                    document.getElementById("statusForm").submit();
                });
            </script>







        </div>
        <div class="col-md-4">
            <select class="form-select" id="sortOrder">
                <option value="asc">Oldest to Newest</option>
                <option value="desc">Newest to Oldest</option>
            </select>

            <script>
                // التعامل مع حدث تغيير الـ select
                document.getElementById("sortOrder").addEventListener("change", function () {
                    var sortOrder = this.value; // أخذ القيمة المحددة
                    var url = new URL(window.location.href); // الحصول على الـ URL الحالي
                    url.searchParams.set("sortOrder", sortOrder); // إضافة أو تحديث معلمة sortOrder في الـ URL
                    window.location.href = url.toString(); // إعادة تحميل الصفحة بالـ URL المحدث
                });
            </script>
        </div>

        <div class="col-md-4">
            <input type="text" class="form-control" id="orderSearch" placeholder="Search Orders by Order ID or Customer Name" />
        </div>
        <script>
            // استرجاع قيمة البحث من URL عند تحميل الصفحة وتعبئتها في الانبوت
            window.addEventListener("DOMContentLoaded", function () {
                const urlParams = new URLSearchParams(window.location.search);
                const searchValue = urlParams.get("search");
                if (searchValue) {
                    document.getElementById("orderSearch").value = searchValue;
                }
            });

            // عند الكتابة في الانبوت أو الضغط Enter، فلتر الطلبات
            document.getElementById("orderSearch").addEventListener("change", function () {
                const value = this.value.trim();
                const url = new URL(window.location.href);
                if (value) {
                    url.searchParams.set("search", value);
                } else {
                    url.searchParams.delete("search");
                }
                window.location.href = url.toString();
            });
        </script>
    </div>

    <!-- Orders Table -->
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Order ID</th>
                <th>Customer Name</th>
                <th>Total Amount</th>
                <th>Status</th>
                <th>Created At</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="ordersTable">
            @foreach (var order in Model)
            {
                <tr>
                    <td>@order.OrderId</td>
                    <td>@order.Name</td>
                    <td>@("JD " + order.TotalAmount.ToString("F2"))</td>
                    <td>
                        @if (order.Status == "Pending")
                        {
                            <span class="badge bg-warning">Pending</span>
                        }
                        else if (order.Status == "Processing")
                        {
                            <span class="badge bg-info">Processing</span>
                        }
                        else if (order.Status == "Completed")
                        {
                            <span class="badge bg-success">Completed</span>
                        }
                        else if (order.Status == "Canceled")
                        {
                            <span class="badge bg-danger">Cancelled</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">@order.Status</span>
                        }
                    </td>
                    <td>@order.OrderDate.ToString("yyyy-MM-dd")</td>
                    <td>
                        <button class="btn btn-info btn-sm view-details-btn"
                                data-orderid="@order.OrderId"
                                data-customername="@order.Name"
                                data-totalamount="@order.TotalAmount"
                                data-status="@order.Status"
                                data-products='@System.Text.Json.JsonSerializer.Serialize(order.Products)'
                                data-bs-toggle="modal" data-bs-target="#orderDetailsModal">
                            View Details
                        </button>


                    </td>
                </tr>
                
           } 
        </tbody>
        
    </table>
    
    <!-- Modal to show order details -->
    <div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="orderDetailsModalLabel">Order Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h5>Order #<span id="modalOrderId"></span></h5>
                    <p><strong>Customer:</strong> <span id="modalCustomerName"></span></p>
                    <p><strong>Total Amount:</strong> <span id="modalTotalAmount"></span></p>
                    <p><strong>Status:</strong> <span id="modalStatus"></span></p>
                    <p><strong>Products:</strong></p>
                    <ul id="modalProductList">
                        <!-- Products will be listed here -->
                    </ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <form asp-action="UpdateOrderStatus" method="post">
                        <input type="hidden" name="orderId" id="modalOrderIdInput" />
                        <input type="hidden" name="newStatus" value="Completed" />
                        <button type="submit" class="btn btn-success">Complete Order</button>
                    </form>

                    <form asp-action="UpdateOrderStatus" method="post">
                        <input type="hidden" name="orderId" id="modalOrderIdInputCancel" />
                        <input type="hidden" name="newStatus" value="Canceled" />
                        <button type="submit" class="btn btn-danger">Cancel Order</button>
                    </form>


                </div>
            </div>
        </div>
    </div>

</div> 

    @section Scripts {
    <script>
              $('#orderDetailsModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var orderId = button.data('orderid');
            var customerName = button.data('customername');
            var totalAmount = button.data('totalamount');
            var status = button.data('status');

            var productsData = button.attr('data-products');
            var products = [];

            if (productsData && productsData.trim() !== '') {
                try {
                    products = JSON.parse(productsData);
                } catch (e) {
                    console.error("Error parsing products data:", e);
                }
            }

            $('#modalOrderId').text(orderId);
            $('#modalCustomerName').text(customerName);
            $('#modalTotalAmount').text('JD' + parseFloat(totalAmount).toFixed(2));
            $('#modalStatus').text(status);

            $('#modalOrderIdInput').val(orderId);
            $('#modalOrderIdInputCancel').val(orderId);

            var productList = '';
            if (products.length > 0) {
                products.forEach(function (product) {
                    productList += `<li>${product.ProductName} - Quantity: ${product.Quantity} - ${parseFloat(product.UnitPrice).toFixed(2)}</li>`;
                });
            } else {
                productList = "<li>No products found for this order.</li>";
            }
            $('#modalProductList').html(productList);
        });

    </script>
}

