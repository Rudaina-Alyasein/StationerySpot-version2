@model List<User>
@{
    Layout = "LibraryDashboard";
}

@section Style {
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
        }

        .chat-user {
            transition: background-color 0.3s;
        }

            .chat-user:hover, .chat-user.active {
                background-color: #e9f7ef;
                border-radius: 10px;
            }

        .message-sent {
            text-align: right;
            background-color: #d1ffd6;
            border-radius: 15px 15px 0 15px;
            padding: 10px 15px;
            max-width: 70%;
            margin-left: auto;
            margin-bottom: 10px;
            font-size: 14px;
        }

        .message-received {
            text-align: left;
            background-color: #ffffff;
            border-radius: 15px 15px 15px 0;
            padding: 10px 15px;
            max-width: 70%;
            margin-right: auto;
            margin-bottom: 10px;
            font-size: 14px;
        }

        #chatBox {
            height: 400px;
            overflow-y: auto;
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
        }

        .chat-header {
            font-weight: 600;
            font-size: 20px;
        }

        #sendMessageButton {
            float: right;
            width: 100px;
        }
    </style>
}

<div class="container-fluid mt-4">
    <div class="row">
        <!-- Sidebar: Students List -->
        <div class="col-md-3 border-end">
            <h5 class="mb-3"><i class="fas fa-users"></i> Students</h5>
            @foreach (var user in Model)
            {
                <div class="p-3 border-bottom chat-user" data-user-id="@user.Id" style="cursor: pointer;">
                    <strong>@user.Name</strong><br />
                    <small class="text-muted">@user.Email</small>
                </div>
            }
        </div>

        <!-- Chat Area -->
        <div class="col-md-9">
            <div class="chat-header mb-3"><i class="fas fa-comment-dots"></i> Chat with: <strong id="chatWithName">Select a user</strong></div>

            <!-- Chat Box -->
            <div id="chatBox">
                <!-- Messages will be loaded here -->
            </div>

            <!-- Message Input -->
            <div class="mt-3">
                <textarea id="messageInput" class="form-control" rows="3" placeholder="Type your message..."></textarea>
                <button id="sendMessageButton" class="btn btn-success mt-2" disabled>Send</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentReceiverId = null;
        const currentSenderName = 'Admin';

        document.querySelectorAll('.chat-user').forEach(userElement => {
            userElement.addEventListener('click', function () {
                const receiverId = this.getAttribute('data-user-id');
                const receiverName = this.querySelector('strong').textContent;

                document.querySelectorAll('.chat-user').forEach(el => el.classList.remove('active'));
                this.classList.add('active');

                document.getElementById('chatWithName').textContent = receiverName;
                currentReceiverId = receiverId;

                fetch(`/LibraryDashboard/GetMessages?userId=${receiverId}`)
                    .then(response => response.json())
                    .then(messages => {
                        const chatBox = document.getElementById('chatBox');
                        chatBox.innerHTML = '';

                        messages.forEach(message => {
                            const messageDiv = document.createElement('div');
                            const isSentByAdmin = message.senderName === currentSenderName;
                            messageDiv.classList.add(isSentByAdmin ? 'message-sent' : 'message-received');
                            messageDiv.innerHTML = `<strong>${message.senderName}:</strong><br>${message.content}`;
                            chatBox.appendChild(messageDiv);
                        });

                        chatBox.scrollTop = chatBox.scrollHeight;
                        document.getElementById('sendMessageButton').disabled = false;
                    })
                    .catch(err => console.error('Error fetching messages:', err));
            });
        });

        document.getElementById('sendMessageButton').addEventListener('click', function () {
            const messageContent = document.getElementById('messageInput').value.trim();
            if (!messageContent) return;

            if (!currentReceiverId) {
                alert('Please select a user to chat with.');
                return;
            }

            const message = {
                senderId: 1, // لازم تغيريها حسب الجلسة Session
                receiverId: currentReceiverId,
                message: messageContent
            };

            fetch('/LibraryDashboard/SendMessage', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(message)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        document.getElementById('messageInput').value = '';
                        document.getElementById('sendMessageButton').disabled = true;

                        fetch(`/LibraryDashboard/GetMessages?userId=${currentReceiverId}`)
                            .then(response => response.json())
                            .then(messages => {
                                const chatBox = document.getElementById('chatBox');
                                chatBox.innerHTML = '';

                                messages.forEach(message => {
                                    const messageDiv = document.createElement('div');
                                    const isSentByAdmin = message.senderName === currentSenderName;
                                    messageDiv.classList.add(isSentByAdmin ? 'message-sent' : 'message-received');
                                    messageDiv.innerHTML = `<strong>${message.senderName}:</strong><br>${message.content}`;
                                    chatBox.appendChild(messageDiv);
                                });

                                chatBox.scrollTop = chatBox.scrollHeight;
                            });
                    }
                })
                .catch(err => console.error('Error sending message:', err));
        });
    </script>
}
